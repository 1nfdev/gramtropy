# Simple demo grammar that generates words of alternating vowels and consonsants.

# Strings are written between "".
space = " ";

# For multiple possibilities, dict() can be used.
vow = dict(a e i o u);

# Even simple regular expressions are supported.
con = /[bcdfghj-np-tvwxz]/;

# Two or more symbols separated by spaces are concatenated.
convow = con vow;

# A symbol can be repeated at least once using '+'.
convows = convow+;

# A question mark makes the preceding symbol optional.
# A pipe symbol separates multiple options.
word = vow con? | vow? convows con?;

# * repeats something zero or more times.
# Braces are used for grouping.
words = word (space word)*;

# main indicates the final result.
main = words;
